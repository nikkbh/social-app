name: Deploy 🚀

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v3

      - name: ⚙️ Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24.4

      - name: 📦 Verify Dependencies
        run: go mod verify

      - name: 🏗️ Build Project
        run: go build -v ./...

      - name: 🔍 Run go vet
        run: go vet ./...

      - name: 📥 Install staticcheck
        run: go install honnef.co/go/tools/cmd/staticcheck@latest

      - name: 🔎 Run staticcheck
        run: staticcheck ./...

      - name: 🧪 Run Tests
        run: go test -race ./...

  update-version:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Extract latest version from CHANGELOG.md
        id: get_version
        run: |
          VERSION=$(grep -oP '\[\K[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -1)
          echo "::set-output name=VERSION::$VERSION"

      - name: Update version in cmd/api/main.go
        run: |
          sed -i "s/const version = \".*\"/const version = \"${{ steps.get_version.outputs.VERSION }}\"/" cmd/api/main.go

      - name: Commit and push if changed
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git add cmd/api/main.go
          git commit -m "Update version to ${{ steps.get_version.outputs.VERSION }}" || echo "No changes to commit"
          git push

  release-please:
    needs: update-version
    runs-on: ubuntu-latest
    steps:
      - uses: googleapis/release-please-action@v4
        with:
          release-type: simple
          token: ${{ secrets.MY_RELEASE_PLEASE_TOKEN }}

  publish:
    needs: release-please
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4

      - name: Extract latest version from CHANGELOG.md
        id: get_version
        run: |
          VERSION=$(grep -oP '\[\K[0-9]+\.[0-9]+\.[0-9]+' CHANGELOG.md | head -1)
          echo "::set-output name=VERSION::$VERSION"

      - name: 🔑 Log in to Azure Container Registry
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: 🏗️ Build and Push Docker image to ACR
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.DOCKER_IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest

  deploy:
    needs: publish
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: 🛠️ Checkout Repository
        uses: actions/checkout@v4

      - name: 🚀 Deploy to Azure App Service
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ secrets.AZURE_WEBAPP_NAME }}
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          images: ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ secrets.DOCKER_IMAGE_NAME }}:latest
